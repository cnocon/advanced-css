$gutters: ("sm": 1rem, "md": 3rem, "lg": 6rem, "xl": 8rem );

@each $gutter in $gutters {
  .margin-x-#{nth($gutter, 1)} {
    margin-left: nth($gutter, 2) !important;
    margin-right: nth($gutter, 2) !important;
  }

  .margin-y-#{nth($gutter, 1)} {
    margin-top: nth($gutter, 2) !important;
    margin-bottom: nth($gutter, 2) !important;
  }

  .margin-top-#{nth($gutter, 1)} {
    margin-top: nth($gutter, 2) !important;
  }

  .margin-top-neg-#{nth($gutter, 1)} {
    margin-top: -#{nth($gutter, 2)} !important;
  }

  .margin-bottom-#{nth($gutter, 1)} {
    margin-bottom: nth($gutter, 2) !important;
  }

  .margin-left-#{nth($gutter, 1)} {
    margin-left: nth($gutter, 2) !important;
  }

  .margin-right-#{nth($gutter, 1)} {
    margin-right: nth($gutter, 2) !important;
  }
}

$breakpoints: (
  "phone":        400px,
  "phone-wide":   480px,
  "phablet":      560px,
  "tablet-small": 640px,
  "tablet":       768px,
  "tablet-wide":  1024px,
  "desktop":      1248px,
  "desktop-wide": 1440px
);

@mixin mediaq($width, $type: min) {
  @if map_has_key($breakpoints, $width) {
    $width: map_get($breakpoints, $width);
    @if $type == max {
      $width: $width - 1px;
    }
    @media only screen and (#{$type}-width: $width) {
      @content;
    }
  }
}

header {
  padding: 2rem;
  font-size: 1.8rem;
  @include mediaq('tablet-wide') {
    padding-top: 4rem;
    font-size: 2.4rem;
  }
}
